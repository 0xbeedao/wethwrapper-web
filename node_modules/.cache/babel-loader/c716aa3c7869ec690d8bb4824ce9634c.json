{"ast":null,"code":"var _jsxFileName = \"/Users/vengist/environments/raid/wethwrapper-web/src/components/WithdrawForm.js\";\nimport React, { useContext } from 'react';\nimport { Formik } from 'formik';\nimport { Form } from 'react-bootstrap';\nimport { Web3ConnectContext, CurrentUserContext, ContractContext } from '../contexts/Store';\nimport { DepositSchema } from './Validation';\nimport { CONTAINER, DEPOSITFORM, BUTTON } from './Form.styled';\nexport const WithdrawForm = () => {\n  const [web3Connect] = useContext(Web3ConnectContext);\n  const [currentUser, setCurrentUser] = useContext(CurrentUserContext);\n  const [contract] = useContext(ContractContext);\n  return React.createElement(CONTAINER, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, \"Unwrap\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, React.createElement(Formik, {\n    initialValues: {\n      amount: 0\n    },\n    validationSchema: DepositSchema,\n    onSubmit: async (values, {\n      setSubmitting,\n      resetForm\n    }) => {\n      setSubmitting(true);\n\n      try {\n        const weiValue = web3Connect.web3.utils.toWei(\"\" + values.amount);\n        await contract.methods.withdraw(weiValue).send({\n          from: currentUser.username\n        });\n        setCurrentUser({ ...currentUser,\n          ...{\n            wethBalance: +currentUser.wethBalance - values.amount\n          }\n        });\n      } catch (err) {\n        console.log(err);\n      } finally {\n        setSubmitting(false);\n        resetForm();\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, ({\n    values,\n    errors,\n    touched,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    isSubmitting\n  }) => React.createElement(DEPOSITFORM, {\n    onSubmit: handleSubmit,\n    className: \"mx-auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    controlId: \"depositForm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Amount :\"), React.createElement(Form.Control, {\n    type: \"number\",\n    name: \"amount\",\n    placeholder: \"Amount to wrap\",\n    value: values.amount,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    className: touched.amount && errors.amount ? \"error\" : null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), touched.amount && errors.amount ? React.createElement(\"div\", {\n    className: \"error-message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, errors.amount) : null), React.createElement(BUTTON, {\n    variant: \"primary\",\n    type: \"submit\",\n    disabled: isSubmitting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, isSubmitting ? 'Loading…' : 'Submit'))))));\n};","map":{"version":3,"sources":["/Users/vengist/environments/raid/wethwrapper-web/src/components/WithdrawForm.js"],"names":["React","useContext","Formik","Form","Web3ConnectContext","CurrentUserContext","ContractContext","DepositSchema","CONTAINER","DEPOSITFORM","BUTTON","WithdrawForm","web3Connect","currentUser","setCurrentUser","contract","amount","values","setSubmitting","resetForm","weiValue","web3","utils","toWei","methods","withdraw","send","from","username","wethBalance","err","console","log","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,IAAT,QAAqB,iBAArB;AAEA,SAASC,kBAAT,EAA6BC,kBAA7B,EAAiDC,eAAjD,QAAwE,mBAAxE;AAEA,SAASC,aAAT,QAA8B,cAA9B;AACA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,MAAjC,QAA+C,eAA/C;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAC9B,QAAM,CAACC,WAAD,IAAgBX,UAAU,CAACG,kBAAD,CAAhC;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCb,UAAU,CAACI,kBAAD,CAAhD;AACA,QAAM,CAACU,QAAD,IAAad,UAAU,CAACK,eAAD,CAA7B;AAEA,SACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,MAAD;AACI,IAAA,aAAa,EAAE;AACXU,MAAAA,MAAM,EAAE;AADG,KADnB;AAII,IAAA,gBAAgB,EAAET,aAJtB;AAKI,IAAA,QAAQ,EAAE,OAAOU,MAAP,EAAe;AAAEC,MAAAA,aAAF;AAAiBC,MAAAA;AAAjB,KAAf,KAAgD;AACtDD,MAAAA,aAAa,CAAC,IAAD,CAAb;;AACA,UAAI;AACA,cAAME,QAAQ,GAAGR,WAAW,CAACS,IAAZ,CAAiBC,KAAjB,CAAuBC,KAAvB,CAA6B,KAAKN,MAAM,CAACD,MAAzC,CAAjB;AACC,cAAMD,QAAQ,CAACS,OAAT,CACFC,QADE,CACOL,QADP,EAEFM,IAFE,CAEG;AAAEC,UAAAA,IAAI,EAAEd,WAAW,CAACe;AAApB,SAFH,CAAN;AAGDd,QAAAA,cAAc,CAAC,EAAE,GAAGD,WAAL;AAAkB,aAAG;AAAEgB,YAAAA,WAAW,EAAE,CAAChB,WAAW,CAACgB,WAAb,GAA2BZ,MAAM,CAACD;AAAjD;AAArB,SAAD,CAAd;AACH,OAND,CAME,OAAOc,GAAP,EAAY;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,OARD,SAQU;AACNZ,QAAAA,aAAa,CAAC,KAAD,CAAb;AACAC,QAAAA,SAAS;AACZ;AACJ,KAnBL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAqBK,CAAC;AACEF,IAAAA,MADF;AAEEgB,IAAAA,MAFF;AAGEC,IAAAA,OAHF;AAIEC,IAAAA,YAJF;AAKEC,IAAAA,UALF;AAMEC,IAAAA,YANF;AAOEC,IAAAA;AAPF,GAAD,KAQG,oBAAC,WAAD;AAAa,IAAA,QAAQ,EAAED,YAAvB;AAAqC,IAAA,SAAS,EAAC,SAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,SAAS,EAAC,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI,oBAAC,IAAD,CAAM,OAAN;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,IAAI,EAAC,QAFT;AAGI,IAAA,WAAW,EAAC,gBAHhB;AAII,IAAA,KAAK,EAAEpB,MAAM,CAACD,MAJlB;AAKI,IAAA,QAAQ,EAAEmB,YALd;AAMI,IAAA,MAAM,EAAEC,UANZ;AAOI,IAAA,SAAS,EAAEF,OAAO,CAAClB,MAAR,IAAkBiB,MAAM,CAACjB,MAAzB,GAAkC,OAAlC,GAA4C,IAP3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,EAWKkB,OAAO,CAAClB,MAAR,IAAkBiB,MAAM,CAACjB,MAAzB,GACG;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCiB,MAAM,CAACjB,MAAvC,CADH,GAEG,IAbR,CADJ,EAgBI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,SAAhB;AAA0B,IAAA,IAAI,EAAC,QAA/B;AAAwC,IAAA,QAAQ,EAAEsB,YAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,YAAY,GAAG,UAAH,GAAgB,QADjC,CAhBJ,CA7BR,CADJ,CADJ,CAFJ,CADJ;AA6DH,CAlEM","sourcesContent":["import React, { useContext } from 'react';\n\nimport { Formik } from 'formik';\nimport { Form } from 'react-bootstrap';\n\nimport { Web3ConnectContext, CurrentUserContext, ContractContext } from '../contexts/Store';\n\nimport { DepositSchema } from './Validation';\nimport { CONTAINER, DEPOSITFORM, BUTTON } from './Form.styled';\n\nexport const WithdrawForm = () => {\n    const [web3Connect] = useContext(Web3ConnectContext);\n    const [currentUser, setCurrentUser] = useContext(CurrentUserContext);\n    const [contract] = useContext(ContractContext);\n\n    return (\n        <CONTAINER>\n            <h1>Unwrap</h1>\n            <div>\n                <div>\n                    <Formik\n                        initialValues={{\n                            amount: 0,\n                        }}\n                        validationSchema={DepositSchema}\n                        onSubmit={async (values, { setSubmitting, resetForm }) => {\n                            setSubmitting(true);\n                            try {\n                                const weiValue = web3Connect.web3.utils.toWei(\"\" + values.amount);\n                                 await contract.methods\n                                    .withdraw(weiValue)\n                                    .send({ from: currentUser.username });\n                                setCurrentUser({ ...currentUser, ...{ wethBalance: +currentUser.wethBalance - values.amount } })           \n                            } catch (err) {\n                                console.log(err);\n                            } finally {\n                                setSubmitting(false);\n                                resetForm();\n                            }\n                        }}\n                    >\n                        {({ \n                            values, \n                            errors,\n                            touched,\n                            handleChange, \n                            handleBlur,\n                            handleSubmit, \n                            isSubmitting }) => (\n                            <DEPOSITFORM onSubmit={handleSubmit} className=\"mx-auto\">\n                                <Form.Group controlId=\"depositForm\">\n                                    <Form.Label>Amount :</Form.Label>\n                                    <Form.Control\n                                        type=\"number\"\n                                        name=\"amount\"\n                                        placeholder=\"Amount to wrap\"\n                                        value={values.amount}\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        className={touched.amount && errors.amount ? \"error\" : null}\n                                    />\n                                    {touched.amount && errors.amount ? (\n                                        <div className=\"error-message\">{errors.amount}</div>\n                                    ) : null}\n                                </Form.Group>\n                                <BUTTON variant=\"primary\" type=\"submit\" disabled={isSubmitting}>\n                                    {isSubmitting ? 'Loading…' : 'Submit'}\n                                </BUTTON>\n                            </DEPOSITFORM>\n                        )}\n                    </Formik>\n\n                </div>\n            </div>\n        </CONTAINER>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}