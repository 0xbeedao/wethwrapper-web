{"ast":null,"code":"var _jsxFileName = \"/Users/vengist/environments/raid/wethwrapper-web/src/components/TokenInfo.js\";\nimport React, { useContext, useEffect } from 'react';\nimport { Web3ConnectContext, CurrentUserContext, ContractContext } from '../contexts/Store.js';\nimport { Container } from 'react-bootstrap';\nexport const TokenInfo = () => {\n  const [web3Connect] = useContext(Web3ConnectContext);\n  const [currentUser, setCurrentUser] = useContext(CurrentUserContext);\n  const [contract] = useContext(ContractContext);\n  useEffect(() => {\n    const getInfo = async () => {\n      const wethBalanceInWei = await contract.methods.balanceOf(currentUser.username).call();\n      const wethBalance = web3Connect.web3.utils.fromWei(\"\" + wethBalanceInWei);\n      setCurrentUser({ ...currentUser,\n        ...{\n          wethBalance\n        }\n      });\n    };\n\n    if (contract) {\n      getInfo();\n    } // eslint-disable-next-line\n\n  }, [contract]);\n\n  const forDisplay = number => {\n    return number ? (+number).toFixed(4) : 0;\n  };\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"WETH Balance: \", currentUser && forDisplay(currentUser.wethBalance)));\n};","map":{"version":3,"sources":["/Users/vengist/environments/raid/wethwrapper-web/src/components/TokenInfo.js"],"names":["React","useContext","useEffect","Web3ConnectContext","CurrentUserContext","ContractContext","Container","TokenInfo","web3Connect","currentUser","setCurrentUser","contract","getInfo","wethBalanceInWei","methods","balanceOf","username","call","wethBalance","web3","utils","fromWei","forDisplay","number","toFixed"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AAEA,SAASC,kBAAT,EAA6BC,kBAA7B,EAAiDC,eAAjD,QAAwE,sBAAxE;AAEA,SAASC,SAAT,QAA0B,iBAA1B;AAEA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC3B,QAAM,CAACC,WAAD,IAAgBP,UAAU,CAACE,kBAAD,CAAhC;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCT,UAAU,CAACG,kBAAD,CAAhD;AACA,QAAM,CAACO,QAAD,IAAaV,UAAU,CAACI,eAAD,CAA7B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMU,OAAO,GAAG,YAAY;AACxB,YAAMC,gBAAgB,GAAG,MAAMF,QAAQ,CAACG,OAAT,CAC1BC,SAD0B,CAChBN,WAAW,CAACO,QADI,EAE1BC,IAF0B,EAA/B;AAGA,YAAMC,WAAW,GAAGV,WAAW,CAACW,IAAZ,CAAiBC,KAAjB,CAAuBC,OAAvB,CAA+B,KAAKR,gBAApC,CAApB;AACAH,MAAAA,cAAc,CAAC,EAAE,GAAGD,WAAL;AAAkB,WAAG;AAAES,UAAAA;AAAF;AAArB,OAAD,CAAd;AACH,KAND;;AAOA,QAAIP,QAAJ,EAAc;AACVC,MAAAA,OAAO;AACV,KAVW,CAWZ;;AACH,GAZQ,EAYN,CAACD,QAAD,CAZM,CAAT;;AAcA,QAAMW,UAAU,GAAIC,MAAD,IAAY;AAE3B,WAAOA,MAAM,GAAG,CAAC,CAACA,MAAF,EAAUC,OAAV,CAAkB,CAAlB,CAAH,GAA0B,CAAvC;AACH,GAHD;;AAKA,SACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAkBf,WAAW,IAAIa,UAAU,CAACb,WAAW,CAACS,WAAb,CAA3C,CADJ,CADJ;AAKH,CA7BM","sourcesContent":["import React, { useContext, useEffect } from 'react';\n\nimport { Web3ConnectContext, CurrentUserContext, ContractContext } from '../contexts/Store.js';\n\nimport { Container } from 'react-bootstrap'\n\nexport const TokenInfo = () => {\n    const [web3Connect] = useContext(Web3ConnectContext);\n    const [currentUser, setCurrentUser] = useContext(CurrentUserContext);\n    const [contract] = useContext(ContractContext);\n\n    useEffect(() => {\n        const getInfo = async () => {\n            const wethBalanceInWei = await contract.methods\n                .balanceOf(currentUser.username)\n                .call();\n            const wethBalance = web3Connect.web3.utils.fromWei(\"\" + wethBalanceInWei);\n            setCurrentUser({ ...currentUser, ...{ wethBalance } })\n        }\n        if (contract) {\n            getInfo();\n        }\n        // eslint-disable-next-line\n    }, [contract])\n\n    const forDisplay = (number) => {\n\n        return number ? (+number).toFixed(4) : 0;\n    }\n\n    return (\n        <Container>\n            <p>WETH Balance: {currentUser && forDisplay(currentUser.wethBalance)}</p>\n        </Container>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}