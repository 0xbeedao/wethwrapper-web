{"ast":null,"code":"var _jsxFileName = \"/Users/vengist/environments/raid/wethwrapper-web/src/components/DepositForm.js\";\nimport React, { useContext } from \"react\";\nimport { Formik } from \"formik\";\nimport { Form } from \"react-bootstrap\";\nimport { Web3ConnectContext, CurrentUserContext, ContractContext } from \"../contexts/Store\";\nimport { DepositSchema } from \"./Validation\";\nimport { CONTAINER, DEPOSITFORM, BUTTON } from \"./Form.styled\";\nexport const DepositForm = () => {\n  const [web3Connect] = useContext(Web3ConnectContext);\n  const [currentUser, setCurrentUser] = useContext(CurrentUserContext);\n  const [contract] = useContext(ContractContext);\n  return React.createElement(CONTAINER, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(Formik, {\n    initialValues: {\n      amount: 0\n    },\n    validationSchema: DepositSchema,\n    onSubmit: async (values, {\n      setSubmitting,\n      resetForm\n    }) => {\n      setSubmitting(true);\n\n      try {\n        const weiValue = web3Connect.web3.utils.toWei(\"\" + values.amount);\n        await contract.methods.deposit().send({\n          value: weiValue,\n          from: currentUser.username\n        });\n        setCurrentUser({ ...currentUser,\n          ...{\n            wethBalance: +currentUser.wethBalance + values.amount\n          }\n        });\n      } catch (err) {\n        console.log(err);\n      } finally {\n        setSubmitting(false);\n        resetForm();\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, ({\n    values,\n    errors,\n    touched,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    isSubmitting\n  }) => React.createElement(DEPOSITFORM, {\n    onSubmit: handleSubmit,\n    className: \"mx-auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(Form.Group, {\n    controlId: \"depositForm\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Form.Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, \"Amount of ETH to Wrap\"), React.createElement(Form.Control, {\n    type: \"number\",\n    name: \"amount\",\n    placeholder: \"Amount to wrap\",\n    value: values.amount,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    className: touched.amount && errors.amount ? \"error\" : null,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), touched.amount && errors.amount ? React.createElement(\"div\", {\n    className: \"error-message\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, errors.amount) : null), React.createElement(BUTTON, {\n    variant: \"primary\",\n    type: \"submit\",\n    disabled: isSubmitting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, isSubmitting ? \"Loading…\" : \"Submit\"))));\n};","map":{"version":3,"sources":["/Users/vengist/environments/raid/wethwrapper-web/src/components/DepositForm.js"],"names":["React","useContext","Formik","Form","Web3ConnectContext","CurrentUserContext","ContractContext","DepositSchema","CONTAINER","DEPOSITFORM","BUTTON","DepositForm","web3Connect","currentUser","setCurrentUser","contract","amount","values","setSubmitting","resetForm","weiValue","web3","utils","toWei","methods","deposit","send","value","from","username","wethBalance","err","console","log","errors","touched","handleChange","handleBlur","handleSubmit","isSubmitting"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\n\nimport { Formik } from \"formik\";\nimport { Form } from \"react-bootstrap\";\n\nimport {\n  Web3ConnectContext,\n  CurrentUserContext,\n  ContractContext,\n} from \"../contexts/Store\";\n\nimport { DepositSchema } from \"./Validation\";\nimport { CONTAINER, DEPOSITFORM, BUTTON } from \"./Form.styled\";\n\nexport const DepositForm = () => {\n  const [web3Connect] = useContext(Web3ConnectContext);\n  const [currentUser, setCurrentUser] = useContext(CurrentUserContext);\n  const [contract] = useContext(ContractContext);\n\n  return (\n    <CONTAINER>\n      <Formik\n        initialValues={{\n          amount: 0,\n        }}\n        validationSchema={DepositSchema}\n        onSubmit={async (values, { setSubmitting, resetForm }) => {\n          setSubmitting(true);\n          try {\n            const weiValue = web3Connect.web3.utils.toWei(\"\" + values.amount);\n            await contract.methods\n              .deposit()\n              .send({ value: weiValue, from: currentUser.username });\n            setCurrentUser({\n              ...currentUser,\n              ...{ wethBalance: +currentUser.wethBalance + values.amount },\n            });\n          } catch (err) {\n            console.log(err);\n          } finally {\n            setSubmitting(false);\n            resetForm();\n          }\n        }}\n      >\n        {({\n          values,\n          errors,\n          touched,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          isSubmitting,\n        }) => (\n          <DEPOSITFORM onSubmit={handleSubmit} className=\"mx-auto\">\n            <Form.Group controlId=\"depositForm\">\n              <Form.Label>Amount of ETH to Wrap</Form.Label>\n              <Form.Control\n                type=\"number\"\n                name=\"amount\"\n                placeholder=\"Amount to wrap\"\n                value={values.amount}\n                onChange={handleChange}\n                onBlur={handleBlur}\n                className={touched.amount && errors.amount ? \"error\" : null}\n              />\n              {touched.amount && errors.amount ? (\n                <div className=\"error-message\">{errors.amount}</div>\n              ) : null}\n            </Form.Group>\n            <BUTTON variant=\"primary\" type=\"submit\" disabled={isSubmitting}>\n              {isSubmitting ? \"Loading…\" : \"Submit\"}\n            </BUTTON>\n          </DEPOSITFORM>\n        )}\n      </Formik>\n    </CONTAINER>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}