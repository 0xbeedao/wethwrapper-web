{"ast":null,"code":"var _jsxFileName = \"/Users/vengist/environments/raid/wethwrapper-web/src/components/TokenInfo.js\";\nimport React, { useContext, useEffect } from \"react\";\nimport { Web3ConnectContext, CurrentUserContext, ContractContext } from \"../contexts/Store.js\";\nexport const TokenInfo = () => {\n  const [web3Connect] = useContext(Web3ConnectContext);\n  const [currentUser, setCurrentUser] = useContext(CurrentUserContext);\n  const [contract] = useContext(ContractContext);\n  useEffect(props => {\n    const getInfo = async () => {\n      const wethBalanceInWei = await contract.methods.balanceOf(currentUser.username).call();\n      const wethBalance = web3Connect.web3.utils.fromWei(\"\" + wethBalanceInWei);\n      setCurrentUser({ ...currentUser,\n        ...{\n          wethBalance\n        }\n      });\n    };\n\n    if (contract) {\n      getInfo();\n    } // eslint-disable-next-line\n\n  }, [contract]);\n\n  const forDisplay = number => {\n    return number ? (+number).toFixed(4) : 0;\n  };\n\n  return props => {\n    props.Eth ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"ETH Balance: \", currentUser && forDisplay(currentUser.wethBalance)) : React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"wETH Balance: \", currentUser && forDisplay(currentUser.wethBalance));\n  };\n};","map":{"version":3,"sources":["/Users/vengist/environments/raid/wethwrapper-web/src/components/TokenInfo.js"],"names":["React","useContext","useEffect","Web3ConnectContext","CurrentUserContext","ContractContext","TokenInfo","web3Connect","currentUser","setCurrentUser","contract","props","getInfo","wethBalanceInWei","methods","balanceOf","username","call","wethBalance","web3","utils","fromWei","forDisplay","number","toFixed","Eth"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AAEA,SACEC,kBADF,EAEEC,kBAFF,EAGEC,eAHF,QAIO,sBAJP;AAMA,OAAO,MAAMC,SAAS,GAAG,MAAM;AAC7B,QAAM,CAACC,WAAD,IAAgBN,UAAU,CAACE,kBAAD,CAAhC;AACA,QAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCR,UAAU,CAACG,kBAAD,CAAhD;AACA,QAAM,CAACM,QAAD,IAAaT,UAAU,CAACI,eAAD,CAA7B;AAEAH,EAAAA,SAAS,CACNS,KAAD,IAAW;AACT,UAAMC,OAAO,GAAG,YAAY;AAC1B,YAAMC,gBAAgB,GAAG,MAAMH,QAAQ,CAACI,OAAT,CAC5BC,SAD4B,CAClBP,WAAW,CAACQ,QADM,EAE5BC,IAF4B,EAA/B;AAGA,YAAMC,WAAW,GAAGX,WAAW,CAACY,IAAZ,CAAiBC,KAAjB,CAAuBC,OAAvB,CAClB,KAAKR,gBADa,CAApB;AAGAJ,MAAAA,cAAc,CAAC,EAAE,GAAGD,WAAL;AAAkB,WAAG;AAAEU,UAAAA;AAAF;AAArB,OAAD,CAAd;AACD,KARD;;AASA,QAAIR,QAAJ,EAAc;AACZE,MAAAA,OAAO;AACR,KAZQ,CAaT;;AACD,GAfM,EAgBP,CAACF,QAAD,CAhBO,CAAT;;AAmBA,QAAMY,UAAU,GAAIC,MAAD,IAAY;AAC7B,WAAOA,MAAM,GAAG,CAAC,CAACA,MAAF,EAAUC,OAAV,CAAkB,CAAlB,CAAH,GAA0B,CAAvC;AACD,GAFD;;AAIA,SAAQb,KAAD,IAAW;AAChBA,IAAAA,KAAK,CAACc,GAAN,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAiBjB,WAAW,IAAIc,UAAU,CAACd,WAAW,CAACU,WAAb,CAA1C,CADF,GAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAkBV,WAAW,IAAIc,UAAU,CAACd,WAAW,CAACU,WAAb,CAA3C,CAHF;AAKD,GAND;AAOD,CAnCM","sourcesContent":["import React, { useContext, useEffect } from \"react\";\n\nimport {\n  Web3ConnectContext,\n  CurrentUserContext,\n  ContractContext,\n} from \"../contexts/Store.js\";\n\nexport const TokenInfo = () => {\n  const [web3Connect] = useContext(Web3ConnectContext);\n  const [currentUser, setCurrentUser] = useContext(CurrentUserContext);\n  const [contract] = useContext(ContractContext);\n\n  useEffect(\n    (props) => {\n      const getInfo = async () => {\n        const wethBalanceInWei = await contract.methods\n          .balanceOf(currentUser.username)\n          .call();\n        const wethBalance = web3Connect.web3.utils.fromWei(\n          \"\" + wethBalanceInWei\n        );\n        setCurrentUser({ ...currentUser, ...{ wethBalance } });\n      };\n      if (contract) {\n        getInfo();\n      }\n      // eslint-disable-next-line\n    },\n    [contract]\n  );\n\n  const forDisplay = (number) => {\n    return number ? (+number).toFixed(4) : 0;\n  };\n\n  return (props) => {\n    props.Eth ? (\n      <p>ETH Balance: {currentUser && forDisplay(currentUser.wethBalance)}</p>\n    ) : (\n      <p>wETH Balance: {currentUser && forDisplay(currentUser.wethBalance)}</p>\n    );\n  };\n};\n"]},"metadata":{},"sourceType":"module"}