{"ast":null,"code":"var _jsxFileName = \"/Users/vengist/environments/raid/wethwrapper-web/src/contexts/Store.js\";\nimport React, { useState, useEffect, createContext } from 'react';\nimport Web3Connect from 'web3connect';\nimport { w3connect, providerOptions, createWeb3User } from '../utils/Auth';\nimport { getChainData } from '../utils/Chains';\nimport WethAbi from '../contracts/wethAbi.json';\nexport const LoaderContext = createContext(false);\nexport const Web3ConnectContext = createContext();\nexport const CurrentUserContext = createContext();\nexport const ContractContext = createContext();\n\nconst Store = ({\n  children\n}) => {\n  const [currentUser, setCurrentUser] = useState();\n  const [contract, setContract] = useState();\n  const [loading, setLoading] = useState(false);\n  const [web3Connect, setWeb3Connect] = useState(new Web3Connect.Core({\n    network: getChainData(+process.env.REACT_APP_CHAIN_ID).network,\n    // optional\n    providerOptions,\n    // required\n    cacheProvider: true\n  }));\n  useEffect(() => {\n    const onLoad = async () => {\n      try {\n        const w3c = await w3connect(web3Connect);\n        const [account] = await w3c.web3.eth.getAccounts();\n        setWeb3Connect(w3c);\n        const user = createWeb3User(account);\n        setCurrentUser(user);\n      } catch (e) {\n        console.error(`Could not log in with web3`);\n      }\n    };\n\n    if (web3Connect.cachedProvider) {\n      onLoad();\n    } // eslint-disable-next-line\n\n  }, []);\n  useEffect(() => {\n    const initContract = async () => {\n      try {\n        const contract = new web3Connect.web3.eth.Contract(WethAbi, process.env.REACT_APP_CONTRACT_ADDR);\n        setContract(contract);\n      } catch (e) {\n        console.error(`Could not init contract`);\n      }\n    };\n\n    if (web3Connect.web3) {\n      initContract();\n    } // eslint-disable-next-line\n\n  }, [web3Connect.web3]);\n  return React.createElement(LoaderContext.Provider, {\n    value: [loading, setLoading],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Web3ConnectContext.Provider, {\n    value: [web3Connect, setWeb3Connect],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(CurrentUserContext.Provider, {\n    value: [currentUser, setCurrentUser],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(ContractContext.Provider, {\n    value: [contract, setContract],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, children))));\n};\n\nexport default Store;","map":{"version":3,"sources":["/Users/vengist/environments/raid/wethwrapper-web/src/contexts/Store.js"],"names":["React","useState","useEffect","createContext","Web3Connect","w3connect","providerOptions","createWeb3User","getChainData","WethAbi","LoaderContext","Web3ConnectContext","CurrentUserContext","ContractContext","Store","children","currentUser","setCurrentUser","contract","setContract","loading","setLoading","web3Connect","setWeb3Connect","Core","network","process","env","REACT_APP_CHAIN_ID","cacheProvider","onLoad","w3c","account","web3","eth","getAccounts","user","e","console","error","cachedProvider","initContract","Contract","REACT_APP_CONTRACT_ADDR"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, createContext } from 'react';\nimport Web3Connect from 'web3connect';\nimport {\n    w3connect,\n    providerOptions,\n    createWeb3User\n} from '../utils/Auth';\nimport { getChainData } from '../utils/Chains';\n\nimport WethAbi from '../contracts/wethAbi.json';\n\nexport const LoaderContext = createContext(false);\nexport const Web3ConnectContext = createContext();\nexport const CurrentUserContext = createContext();\nexport const ContractContext = createContext();\n\nconst Store = ({ children }) => {\n\n    const [currentUser, setCurrentUser] = useState();\n    const [contract, setContract] = useState();\n    const [loading, setLoading] = useState(false);\n    const [web3Connect, setWeb3Connect] = useState(\n        new Web3Connect.Core({\n            network: getChainData(+process.env.REACT_APP_CHAIN_ID).network, // optional\n            providerOptions, // required\n            cacheProvider: true,\n        }),\n    );\n\n    useEffect(() => {\n        const onLoad = async () => {\n            try {\n                const w3c = await w3connect(\n                    web3Connect,\n                );\n                const [account] = await w3c.web3.eth.getAccounts();\n                setWeb3Connect(w3c);\n                const user = createWeb3User(account);\n                setCurrentUser(user);\n            } catch (e) {\n                console.error(\n                    `Could not log in with web3`,\n                );\n            }\n        };\n        if (web3Connect.cachedProvider) {\n            onLoad();\n        }\n        // eslint-disable-next-line\n    }, []);\n\n    useEffect(() => {\n        const initContract = async () => {\n            try {\n                const contract = new web3Connect.web3.eth.Contract(WethAbi, process.env.REACT_APP_CONTRACT_ADDR);\n                setContract(contract)\n            } catch (e) {\n                console.error(\n                    `Could not init contract`,\n                );\n            }\n        };\n        if (web3Connect.web3) {\n            initContract();\n        }\n        // eslint-disable-next-line\n    }, [web3Connect.web3]);\n\n\n    return (\n        <LoaderContext.Provider value={[loading, setLoading]}>\n            <Web3ConnectContext.Provider value={[web3Connect, setWeb3Connect]}>\n                <CurrentUserContext.Provider\n                    value={[currentUser, setCurrentUser]}\n                >\n                    <ContractContext.Provider value={[contract, setContract]}>\n                        {children}\n                    </ContractContext.Provider>\n                </CurrentUserContext.Provider>\n            </Web3ConnectContext.Provider>\n        </LoaderContext.Provider>\n    );\n};\n\nexport default Store;"]},"metadata":{},"sourceType":"module"}