{"ast":null,"code":"var _jsxFileName = \"/Users/vengist/environments/raid/wethwrapper-web/src/components/TokenInfo.js\";\nimport React, { useContext, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { Web3ConnectContext, CurrentUserContext, ContractContext } from \"../contexts/Store.js\";\nconst TokenP = styled.p`\n  display: inline-block;\n  text-align: right;\n  width: 100%;\n  float: right;\n  margin-top: -24px;\n  color: rgba(0, 0, 0, 0.85);\n`;\nexport const TokenInfo = props => {\n  const [web3Connect] = useContext(Web3ConnectContext);\n  const [currentUser, setCurrentUser] = useContext(CurrentUserContext);\n  const [contract] = useContext(ContractContext);\n  useEffect(() => {\n    const getInfo = async () => {\n      // set wETH balance\n      const wethBalanceInWei = await contract.methods.balanceOf(currentUser.username).call();\n      const wethBalance = web3Connect.web3.utils.fromWei(\"\" + wethBalanceInWei); // get Eth Balance\n\n      const ethBalanceInWei = await web3Connect.web3.eth.getBalance(currentUser.username);\n      const ethBalance = web3Connect.web3.utils.fromWei(\"\" + ethBalanceInWei);\n      setCurrentUser({ ...currentUser,\n        ...{\n          wethBalance,\n          ethBalance\n        }\n      });\n    };\n\n    if (contract) {\n      getInfo();\n    } // eslint-disable-next-line\n\n  }, [contract]);\n\n  const forDisplay = number => {\n    return number ? (+number).toFixed(4) : 0;\n  };\n\n  return currentUser && props.Eth ? React.createElement(TokenP, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"ETH Balance: \", forDisplay(currentUser.ethBalance)) : React.createElement(TokenP, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"wETH Balance: \", forDisplay(currentUser.wethBalance));\n};","map":{"version":3,"sources":["/Users/vengist/environments/raid/wethwrapper-web/src/components/TokenInfo.js"],"names":["React","useContext","useEffect","styled","Web3ConnectContext","CurrentUserContext","ContractContext","TokenP","p","TokenInfo","props","web3Connect","currentUser","setCurrentUser","contract","getInfo","wethBalanceInWei","methods","balanceOf","username","call","wethBalance","web3","utils","fromWei","ethBalanceInWei","eth","getBalance","ethBalance","forDisplay","number","toFixed","Eth"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SACEC,kBADF,EAEEC,kBAFF,EAGEC,eAHF,QAIO,sBAJP;AAMA,MAAMC,MAAM,GAAGJ,MAAM,CAACK,CAAE;;;;;;;CAAxB;AASA,OAAO,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAClC,QAAM,CAACC,WAAD,IAAgBV,UAAU,CAACG,kBAAD,CAAhC;AACA,QAAM,CAACQ,WAAD,EAAcC,cAAd,IAAgCZ,UAAU,CAACI,kBAAD,CAAhD;AACA,QAAM,CAACS,QAAD,IAAab,UAAU,CAACK,eAAD,CAA7B;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,OAAO,GAAG,YAAY;AAC1B;AACA,YAAMC,gBAAgB,GAAG,MAAMF,QAAQ,CAACG,OAAT,CAC5BC,SAD4B,CAClBN,WAAW,CAACO,QADM,EAE5BC,IAF4B,EAA/B;AAGA,YAAMC,WAAW,GAAGV,WAAW,CAACW,IAAZ,CAAiBC,KAAjB,CAAuBC,OAAvB,CAA+B,KAAKR,gBAApC,CAApB,CAL0B,CAM1B;;AACA,YAAMS,eAAe,GAAG,MAAMd,WAAW,CAACW,IAAZ,CAAiBI,GAAjB,CAAqBC,UAArB,CAC5Bf,WAAW,CAACO,QADgB,CAA9B;AAGA,YAAMS,UAAU,GAAGjB,WAAW,CAACW,IAAZ,CAAiBC,KAAjB,CAAuBC,OAAvB,CAA+B,KAAKC,eAApC,CAAnB;AAEAZ,MAAAA,cAAc,CAAC,EAAE,GAAGD,WAAL;AAAkB,WAAG;AAAES,UAAAA,WAAF;AAAeO,UAAAA;AAAf;AAArB,OAAD,CAAd;AACD,KAbD;;AAcA,QAAId,QAAJ,EAAc;AACZC,MAAAA,OAAO;AACR,KAjBa,CAkBd;;AACD,GAnBQ,EAmBN,CAACD,QAAD,CAnBM,CAAT;;AAqBA,QAAMe,UAAU,GAAIC,MAAD,IAAY;AAC7B,WAAOA,MAAM,GAAG,CAAC,CAACA,MAAF,EAAUC,OAAV,CAAkB,CAAlB,CAAH,GAA0B,CAAvC;AACD,GAFD;;AAIA,SAAOnB,WAAW,IAAIF,KAAK,CAACsB,GAArB,GACL,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAsBH,UAAU,CAACjB,WAAW,CAACgB,UAAb,CAAhC,CADK,GAGL,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAuBC,UAAU,CAACjB,WAAW,CAACS,WAAb,CAAjC,CAHF;AAKD,CAnCM","sourcesContent":["import React, { useContext, useEffect } from \"react\";\nimport styled from \"styled-components\";\n\nimport {\n  Web3ConnectContext,\n  CurrentUserContext,\n  ContractContext,\n} from \"../contexts/Store.js\";\n\nconst TokenP = styled.p`\n  display: inline-block;\n  text-align: right;\n  width: 100%;\n  float: right;\n  margin-top: -24px;\n  color: rgba(0, 0, 0, 0.85);\n`;\n\nexport const TokenInfo = (props) => {\n  const [web3Connect] = useContext(Web3ConnectContext);\n  const [currentUser, setCurrentUser] = useContext(CurrentUserContext);\n  const [contract] = useContext(ContractContext);\n\n  useEffect(() => {\n    const getInfo = async () => {\n      // set wETH balance\n      const wethBalanceInWei = await contract.methods\n        .balanceOf(currentUser.username)\n        .call();\n      const wethBalance = web3Connect.web3.utils.fromWei(\"\" + wethBalanceInWei);\n      // get Eth Balance\n      const ethBalanceInWei = await web3Connect.web3.eth.getBalance(\n        currentUser.username\n      );\n      const ethBalance = web3Connect.web3.utils.fromWei(\"\" + ethBalanceInWei);\n\n      setCurrentUser({ ...currentUser, ...{ wethBalance, ethBalance } });\n    };\n    if (contract) {\n      getInfo();\n    }\n    // eslint-disable-next-line\n  }, [contract]);\n\n  const forDisplay = (number) => {\n    return number ? (+number).toFixed(4) : 0;\n  };\n\n  return currentUser && props.Eth ? (\n    <TokenP>ETH Balance: {forDisplay(currentUser.ethBalance)}</TokenP>\n  ) : (\n    <TokenP>wETH Balance: {forDisplay(currentUser.wethBalance)}</TokenP>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}